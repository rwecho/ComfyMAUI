@page "/install-wizard"
@using ComfyMAUI.Components.Layout
@using ComfyMAUI.Views
@inject IMessageService message
@inject InstallWizardViewModel viewModel
@implements IDisposable


<Card Title="安装 ComfyUI 向导" Class="h-screen flex flex-col">
    <Extra>
        <Button OnClick="ClosePopup" Type="@ButtonType.Text">
            <Icon Type="close" Theme="outline" />
        </Button>
    </Extra>
    <Body>
        <CascadingValue Value="viewModel">
            <div class="flex-1 flex flex-col" >
                <Steps Current="_current">
                    @foreach (var item in steps)
                    {
                        <Step Title="@item.Title" />
                    } 
                </Steps>
                <div class="flex-1 mt-4 round-md flex flex-col">
                    @steps[_current].Content
                </div>
            </div>
        </CascadingValue>
    </Body>
</Card>

<style>
    .ant-card-body{
    flex:1;
    display: flex;
    flex-direction: column;
    }
</style>

@code {
    [CascadingParameter]
    public IHostWindowViewModel HostWindowViewModel { get; set; } = null!;

    private Subject<bool> _disposed = new();
    private int _current;

    public async Task ClosePopup()
    {
        if(HostWindowViewModel is IPopupHostWindowViewModel popupHostWindowViewModel)
        {
            await popupHostWindowViewModel.CloseAsync();
        }
    }

    protected override Task OnInitializedAsync()
    {
        viewModel.CurrentSubject
        .TakeUntil(_disposed)
        .Do(current =>
        {
            _current = current;
            InvokeAsync(StateHasChanged);
        })
        .Subscribe();
        return base.OnInitializedAsync();
    }

    public class StepItem
    {
        public string Title { get; set; } = null!;
        public RenderFragment Content { get; set; } = null!;
    }

    public StepItem[] steps =
    {
        new StepItem {Title = "镜像", Content = @<MirrorSetup></MirrorSetup> },
        new StepItem {Title = "Git 代码管理", Content = @<GitSetup></GitSetup>},
        new StepItem {Title = "ComfyUI", Content = @<ComfyUISetup></ComfyUISetup>},
        new StepItem {Title = "节点下载", Content = @<CustomNodeSetup></CustomNodeSetup>},
        new StepItem {Title = "模型下载", Content = @<ModelsSetup></ModelsSetup>}
    };

    public void Dispose()
    {
        _disposed.OnNext(true);
    }
}
